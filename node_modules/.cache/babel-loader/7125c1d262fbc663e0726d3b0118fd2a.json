{"ast":null,"code":"var _jsxFileName = \"E:\\\\ReactJs\\\\my-app\\\\src\\\\Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar button = false;\n\nconst User = () => {\n  _s();\n\n  const [email, updateemail] = useState(\"\");\n  const [password, updatepassword] = useState(\"\");\n  const [error, seterror] = useState(null);\n  const [friendList, setfriendList] = useState([]);\n  useEffect(() => {\n    button = false;\n\n    const userFun = async () => {\n      const responce = await fetch('https://todo-list-64f41-default-rtdb.firebaseio.com/User.json');\n      const responseData = await responce.json();\n      const userList = [];\n\n      for (const key in responseData) {\n        userList.push({\n          id: key,\n          email: String(responseData[key].email),\n          password: String(responseData[key].password)\n        });\n      }\n\n      setfriendList(userList); //console.log(userList);\n    };\n\n    userFun();\n  }, []);\n\n  function getValue1(event) {\n    updateemail(event.target.value);\n    seterror(null);\n  }\n\n  function getValue2(event) {\n    updatepassword(event.target.value);\n    seterror(null);\n  }\n\n  function handle(e) {\n    e.preventDefault();\n    friendList.map(friend => {\n      if (friend.email === email && friend.password === password) {\n        button = true;\n      }\n\n      return button;\n    }); //console.log(\"button\",button);\n\n    button ? seterror(\"User Id and Password Verified\") : seterror(\"Wrong User Id and Password\");\n  }\n\n  ;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Logindiv\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handle,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Login Form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            id: \"email\",\n            className: \"Loginlabel\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"Logininput1\",\n            type: \"e-mail\",\n            name: \"email\",\n            value: email,\n            onChange: getValue1,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            id: \"password\",\n            className: \"Loginlabel\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"Logininput2\",\n            type: \"password\",\n            name: \"password\",\n            value: password,\n            onChange: getValue2,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [console.log(button), button ? /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"Loginbutton\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/status\",\n              style: {\n                textDecoration: 'none'\n              },\n              className: \"Loginbuttonlink\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 68\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 22\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"Loginbutton\",\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 173\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Errorkdiv\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"Errorheading\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 39\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"Rgisterbutton\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/Register\",\n              style: {\n                textDecoration: 'none'\n              },\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 47\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(User, \"RToLRjGBsYpBjaFj8W8G6HwK9U4=\");\n\n_c = User;\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["E:/ReactJs/my-app/src/Login.tsx"],"names":["React","useEffect","useState","Link","button","User","email","updateemail","password","updatepassword","error","seterror","friendList","setfriendList","userFun","responce","fetch","responseData","json","userList","key","push","id","String","getValue1","event","target","value","getValue2","handle","e","preventDefault","map","friend","console","log","textDecoration"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nvar button = false;\r\nconst User=()=>{\r\n      \r\n    const [email,updateemail]=useState<string>(\"\");\r\n    const [password,updatepassword]=useState<string>(\"\");\r\n    const [error,seterror] =useState<String|null>(null);\r\n    const [friendList,setfriendList]=useState<any[]>([]);\r\n    \r\n    useEffect(()=>{\r\n        button=false;\r\n        const userFun= async ()=>{\r\n        const responce=await fetch('https://todo-list-64f41-default-rtdb.firebaseio.com/User.json');\r\n        const responseData = await responce.json();\r\n        const userList=[];\r\n        for(const key in responseData){\r\n            userList.push({\r\n                id:key,\r\n                email:String(responseData[key].email),\r\n                password:String(responseData[key].password),\r\n            })\r\n        }\r\n        setfriendList(userList);\r\n        //console.log(userList);\r\n    };\r\n    userFun();\r\n    },[])\r\n    \r\n \r\n    \r\n    function getValue1(event:any){   \r\n        updateemail(event.target.value);\r\n        seterror(null);\r\n\r\n    }\r\n      function getValue2(event:any){   \r\n        updatepassword(event.target.value);\r\n        seterror(null);\r\n    }\r\n    \r\n    function handle(e: any){\r\n        e.preventDefault();\r\n        friendList.map((friend)=>\r\n            {\r\n            if(friend.email === email && friend.password === password) \r\n            {\r\n                button=true;\r\n            }\r\n            return button;\r\n            }\r\n            )\r\n            //console.log(\"button\",button);\r\n            button ? seterror(\"User Id and Password Verified\") : seterror(\"Wrong User Id and Password\");\r\n        };\r\n    return(\r\n        \r\n        <div>\r\n            <div className=\"Logindiv\">\r\n            <form onSubmit={handle}>\r\n            <div><h2>Login Form</h2></div>\r\n        <div>\r\n            <label htmlFor=\"email\" id=\"email\" className=\"Loginlabel\">Email</label>\r\n            <input className=\"Logininput1\" type=\"e-mail\" name=\"email\" value={email} onChange={getValue1} required/>\r\n        </div>\r\n            <br/>\r\n        <div><label htmlFor=\"password\" id=\"password\" className=\"Loginlabel\">Password</label>\r\n            <input className=\"Logininput2\" type=\"password\" name=\"password\" value={password} onChange={getValue2} required/>\r\n        </div>    \r\n            <br/>\r\n        <div>    \r\n            {console.log(button)}\r\n           {button ? <button type=\"submit\" className=\"Loginbutton\"><Link to=\"/status\" style={{ textDecoration: 'none' }} className=\"Loginbuttonlink\">Login</Link></button> :<button className=\"Loginbutton\" type=\"submit\">Login</button> }\r\n        </div>\r\n           <div className=\"Errorkdiv\"><h2 className=\"Errorheading\">{error}</h2></div>\r\n           \r\n        <div>\r\n            <button className=\"Rgisterbutton\"><Link to=\"/Register\" style={{ textDecoration: 'none' }}>Register</Link></button>\r\n        </div>\r\n           </form>\r\n        </div>\r\n        </div>\r\n\r\n    )\r\n\r\n\r\n}\r\nexport default User;"]},"metadata":{},"sourceType":"module"}