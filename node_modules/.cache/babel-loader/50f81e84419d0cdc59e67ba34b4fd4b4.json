{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport firebase from \"./firebase_config\";\n\nconst useLocalStorage = () => {\n  _s();\n\n  const [item, setitem] = useState([]);\n  useEffect(() => {\n    const TODO = async () => {\n      const todoref = firebase.database().ref(\"TODO\");\n      todoref.on('value', snapshot => {\n        const todo = snapshot.val();\n        const Items = [];\n\n        for (let id in todo) {\n          Items.push({\n            id,\n            ...todo[id]\n          });\n        }\n\n        setitem(Items);\n      });\n    };\n\n    TODO();\n  }, []);\n  console.log(\"getlocal firsbase\", JSON.stringify(item));\n  return JSON.stringify(item);\n};\n\n_s(useLocalStorage, \"pRdIiGZ9soKpLX94JRaOfbCdgeA=\");\n\nexport default useLocalStorage;","map":{"version":3,"sources":["E:/ReactJs/my-app/src/getlocal.tsx"],"names":["useEffect","useState","firebase","useLocalStorage","item","setitem","TODO","todoref","database","ref","on","snapshot","todo","val","Items","id","push","console","log","JSON","stringify"],"mappings":";;AAAA,SAAUA,SAAV,EAAqBC,QAArB,QAAqC,OAArC;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,MAAMC,eAAe,GAAC,MAAI;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAeJ,QAAQ,CAAW,EAAX,CAA7B;AACAD,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMM,IAAI,GAAE,YAChB;AACI,YAAMC,OAAO,GAAGL,QAAQ,CAACM,QAAT,GAAoBC,GAApB,CAAwB,MAAxB,CAAhB;AACAF,MAAAA,OAAO,CAACG,EAAR,CAAW,OAAX,EAAoBC,QAAD,IAAY;AAC3B,cAAMC,IAAI,GAAED,QAAQ,CAACE,GAAT,EAAZ;AACA,cAAMC,KAAK,GAAE,EAAb;;AACA,aAAI,IAAIC,EAAR,IAAcH,IAAd,EAAoB;AAChBE,UAAAA,KAAK,CAACE,IAAN,CAAW;AAACD,YAAAA,EAAD;AAAI,eAAGH,IAAI,CAACG,EAAD;AAAX,WAAX;AACH;;AAEFV,QAAAA,OAAO,CAACS,KAAD,CAAP;AACF,OARD;AASH,KAZG;;AAaJR,IAAAA,IAAI;AACP,GAfY,EAeX,EAfW,CAAT;AAiBAW,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAgCC,IAAI,CAACC,SAAL,CAAehB,IAAf,CAAhC;AACA,SAAOe,IAAI,CAACC,SAAL,CAAehB,IAAf,CAAP;AACH,CArBD;;GAAMD,e;;AAsBN,eAAeA,eAAf","sourcesContent":["import  { useEffect, useState } from \"react\";\r\nimport firebase from \"./firebase_config\";\r\n\r\nconst useLocalStorage=()=>{\r\n    const [item,setitem]=useState<object[]>([]);\r\n    useEffect(()=>{\r\n        const TODO= async ()=>\r\n    {\r\n        const todoref = firebase.database().ref(\"TODO\");\r\n        todoref.on('value',(snapshot)=>{\r\n            const todo= snapshot.val();\r\n            const Items =[];\r\n            for(let id in todo ){\r\n                Items.push({id,...todo[id]})\r\n            }\r\n            \r\n           setitem(Items);\r\n        })\r\n    };\r\n    TODO();\r\n},[])\r\n    \r\n    console.log(\"getlocal firsbase\",JSON.stringify(item));\r\n    return JSON.stringify(item);\r\n}\r\nexport default useLocalStorage;"]},"metadata":{},"sourceType":"module"}