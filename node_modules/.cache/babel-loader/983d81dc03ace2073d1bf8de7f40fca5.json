{"ast":null,"code":"var _jsxFileName = \"E:\\\\ReactJs\\\\my-app\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"./app.css\";\nimport Input from './Input';\nimport Button from './button';\nimport { RiDeleteBin6Line, RiEdit2Fill } from \"react-icons/ri\";\nimport useLocalStorage from \"./getlocal\";\nimport firebase from \"./firebase_config\";\nimport { NavLink } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [newInputData, setNewInputData] = useState(\"\");\n  const [list, setList] = useState(JSON.parse(useLocalStorage()));\n  const [edititem, updateedititem] = useState(true);\n  const [editinputid, seteditinputid] = useState(\"\");\n  const [isloading, setisloading] = useState(true);\n  useEffect(() => {\n    setisloading(true);\n    const todoref = firebase.database().ref(\"TODO\");\n    todoref.on('value', snapshot => {\n      const todo = snapshot.val();\n      const Items = [];\n\n      for (let id in todo) {\n        Items.push({\n          id,\n          ...todo[id]\n        });\n      }\n\n      setList(Items);\n      setisloading(false);\n    });\n  }, []);\n\n  function getValue(event) {\n    setNewInputData(event.target.value);\n  }\n\n  ;\n\n  const updateData = () => {\n    if (!newInputData) {\n      alert('Please Fill The Data');\n    } else if (newInputData && !edititem) {\n      const todoref = firebase.database().ref(\"TODO\");\n      todoref.child(editinputid).update({\n        name: newInputData\n      });\n      updateedititem(true);\n      setNewInputData('');\n      seteditinputid(\"\");\n    } else {\n      const todoref = firebase.database().ref(\"TODO\");\n      const todo = {\n        name: newInputData,\n        done: false\n      };\n      todoref.push(todo);\n      setNewInputData(\"\");\n    }\n  };\n\n  const deleteEle = index => {\n    const todoref = firebase.database().ref(\"TODO\").child(index.id);\n    todoref.remove();\n  };\n\n  const editEle = id => {\n    let edit = list.find(ele => {\n      return ele.id === id;\n    }); //console.log(\"edit \",edit);\n\n    updateedititem(false);\n    setNewInputData(edit.name);\n    seteditinputid(id);\n  };\n\n  const cutit = linelist => {\n    const todoref = firebase.database().ref('TODO').child(linelist.id);\n    todoref.update({\n      done: !linelist.done\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Divbody\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Logoutbutton\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/\",\n          style: {\n            textDecoration: 'none'\n          },\n          className: \"Logoutbuttonlink\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      data: newInputData,\n      value: getValue,\n      loading: isloading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: list.map((listitems, index) => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Showmain\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Show1\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onClick: () => cutit(listitems)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Show2\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  textDecoration: listitems.done ? \"line-through\" : \"none\"\n                },\n                children: listitems.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Show3\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                title: \"Delete Item\",\n                onClick: () => deleteEle(listitems),\n                children: /*#__PURE__*/_jsxDEV(RiDeleteBin6Line, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 86\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Show4\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                title: \"Edit Item\",\n                onClick: () => editEle(listitems.id),\n                children: /*#__PURE__*/_jsxDEV(RiEdit2Fill, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 85\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), edititem ? /*#__PURE__*/_jsxDEV(Button, {\n      data: updateData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: updateData,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 52\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"aJNa/9ymFuWWrmh6BDhFFrIuhIE=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/ReactJs/my-app/src/App.tsx"],"names":["React","useEffect","useState","Input","Button","RiDeleteBin6Line","RiEdit2Fill","useLocalStorage","firebase","NavLink","App","newInputData","setNewInputData","list","setList","JSON","parse","edititem","updateedititem","editinputid","seteditinputid","isloading","setisloading","todoref","database","ref","on","snapshot","todo","val","Items","id","push","getValue","event","target","value","updateData","alert","child","update","name","done","deleteEle","index","remove","editEle","edit","find","ele","cutit","linelist","textDecoration","map","listitems"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport \"./app.css\";\r\nimport Input from './Input';\r\nimport Button from './button';\r\nimport { RiDeleteBin6Line,RiEdit2Fill } from \"react-icons/ri\";\r\nimport useLocalStorage from \"./getlocal\";\r\nimport firebase from \"./firebase_config\";\r\nimport {  NavLink } from 'react-router-dom';\r\n\r\nconst App=()=>{\r\n    \r\n    const [newInputData,setNewInputData]=useState<string>(\"\");\r\n    const [list, setList] = useState<any[]>(JSON.parse(useLocalStorage()));\r\n    const [edititem,updateedititem]=useState<boolean>(true);\r\n    const [editinputid,seteditinputid]=useState<string>(\"\");\r\n    const [isloading,setisloading]=useState<boolean>(true);\r\n\r\n    useEffect(()=>{\r\n        \r\n        setisloading(true);\r\n        const todoref = firebase.database().ref(\"TODO\");\r\n        todoref.on('value',(snapshot)=>{\r\n            const todo= snapshot.val();\r\n            const Items =[];\r\n            for(let id in todo ){\r\n                Items.push({id,...todo[id]})\r\n            }\r\n           setList(Items);\r\n           setisloading(false);\r\n        })\r\n},[])\r\n    function getValue(event: { target: { value: React.SetStateAction<string>; }; }){   \r\n        setNewInputData(event.target.value);\r\n    };\r\n\r\n    const updateData=()=>{\r\n        if(!newInputData){\r\n        alert('Please Fill The Data');\r\n        }\r\n        else if(newInputData && !edititem){\r\n            const todoref=firebase.database().ref(\"TODO\");\r\n            todoref.child(editinputid).update({\r\n                name:newInputData,\r\n            })\r\n        updateedititem(true);\r\n        setNewInputData('');\r\n        seteditinputid(\"\");\r\n        }\r\n        else\r\n        {\r\n        const todoref =firebase.database().ref(\"TODO\");\r\n        const todo ={name:newInputData,done:false}\r\n        todoref.push(todo);\r\n        setNewInputData(\"\");  \r\n        }\r\n        };\r\n\r\n    const deleteEle=(index: { id: string; })=>{\r\n       const todoref = firebase.database().ref(\"TODO\").child(index.id);\r\n       todoref.remove();    \r\n    }\r\n\r\n    const editEle=(id:string)=>{\r\n        let edit=list.find((ele)=>{\r\n             return ele.id===id;\r\n        });\r\n        //console.log(\"edit \",edit);\r\n        updateedititem(false);\r\n        setNewInputData(edit.name);\r\n        seteditinputid(id);\r\n    }\r\n    const cutit=(linelist:any)=>{\r\n        const todoref= firebase.database().ref('TODO').child(linelist.id);\r\n        todoref.update({\r\n            done:!linelist.done,\r\n        })\r\n    \r\n    }\r\n    return (\r\n    <div className=\"Divbody\">\r\n        <div>\r\n        <button className=\"Logoutbutton\"><NavLink to=\"/\" style={{ textDecoration: 'none' }} className=\"Logoutbuttonlink\">Logout</NavLink></button>\r\n        </div>\r\n        <Input data={newInputData} value={getValue} loading={isloading}/>\r\n        <div>\r\n            { list.map((listitems,index)=>{\r\n                return (<>\r\n                \r\n                <div className=\"Showmain\" key={index}>\r\n                    <div className=\"Show1\">\r\n                        <input type=\"checkbox\" onClick={()=>cutit(listitems)}></input>\r\n                    </div>\r\n                    <div className=\"Show2\">\r\n                        <h3 style={{textDecoration: listitems.done ? \"line-through\" : \"none\"}}>{listitems.name}</h3>\r\n                    </div>\r\n                    <div className=\"Show3\">\r\n                        <span title=\"Delete Item\" onClick={()=>deleteEle(listitems)}><RiDeleteBin6Line/></span>\r\n                    </div>\r\n                    <div className=\"Show4\">\r\n                        <span title=\"Edit Item\" onClick={()=>editEle(listitems.id)}><RiEdit2Fill/></span>\r\n                    </div>\r\n                </div>\r\n                </>)\r\n            \r\n            })}\r\n        </div>\r\n        {\r\n            edititem ? <Button data={updateData}/>:<button className=\"btn\" onClick={updateData}>Edit</button> \r\n        }\r\n    </div>\r\n    )\r\n    }\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}