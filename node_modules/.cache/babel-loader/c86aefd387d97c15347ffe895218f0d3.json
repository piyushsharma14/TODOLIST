{"ast":null,"code":"var _jsxFileName = \"E:\\\\ReactJs\\\\my-app\\\\src\\\\Login.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport fetchAction from \"./actions/index\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar button = false;\n\nconst User = () => {\n  _s();\n\n  const [email, updateemail] = useState(\"\");\n  const [password, updatepassword] = useState(\"\");\n  const [error, seterror] = useState(null);\n  const [friendList, setfriendList] = useState([]);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  useEffect(() => {\n    button = false;\n\n    const userFun = async () => {\n      const responce = await fetch(\"https://todo-list-64f41-default-rtdb.firebaseio.com/User.json\");\n      const responseData = await responce.json();\n      const userList = [];\n\n      for (const key in responseData) {\n        userList.push({\n          id: key,\n          email: String(responseData[key].email),\n          password: String(responseData[key].password)\n        });\n      }\n\n      setfriendList(userList); //console.log(userList);\n    };\n\n    userFun();\n  }, []);\n\n  function getValue1(event) {\n    updateemail(event.target.value);\n    seterror(null);\n  }\n\n  function getValue2(event) {\n    updatepassword(event.target.value);\n    seterror(null);\n  }\n\n  function handle(e) {\n    e.preventDefault();\n    friendList.map(friend => {\n      console.log(\"friend\", friend);\n\n      if (friend.email === email && friend.password === password) {\n        button = true;\n        history.push(\"/status\");\n        dispatch(fetchAction(friend));\n        window.localStorage.setItem(\"Info\", JSON.stringify(friend));\n      }\n\n      return null;\n    }); //console.log(\"button\",button);\n\n    if (!button) {\n      seterror(\"Wrong User Id and Password\");\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Logindiv\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handle,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Login Form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            id: \"email\",\n            className: \"Loginlabel\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"Logininput1\",\n            type: \"email\",\n            name: \"email\",\n            value: email,\n            onChange: getValue1,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            id: \"password\",\n            className: \"Loginlabel\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"Logininput2\",\n            type: \"password\",\n            name: \"password\",\n            value: password,\n            onChange: getValue2,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [console.log(button), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"Loginbutton\",\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"Loginregisterbutton\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/Register\",\n              style: {\n                textDecoration: \"none\"\n              },\n              className: \"Registerloginbuttonlink\",\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), button ? /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Errorkdiv\",\n          children: /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"Errorheading\",\n            children: error\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(User, \"X2vX5zBHkq5dCy//u6UB7Q5FESw=\", false, function () {\n  return [useHistory, useDispatch];\n});\n\n_c = User;\nexport default User;\n\nvar _c;\n\n$RefreshReg$(_c, \"User\");","map":{"version":3,"sources":["E:/ReactJs/my-app/src/Login.tsx"],"names":["React","useEffect","useState","useDispatch","fetchAction","Link","useHistory","button","User","email","updateemail","password","updatepassword","error","seterror","friendList","setfriendList","history","dispatch","userFun","responce","fetch","responseData","json","userList","key","push","id","String","getValue1","event","target","value","getValue2","handle","e","preventDefault","map","friend","console","log","window","localStorage","setItem","JSON","stringify","textDecoration"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport fetchAction from \"./actions/index\"\r\nimport { Link,useHistory } from \"react-router-dom\";\r\nvar button = false;\r\nconst User = () => {\r\n  const [email, updateemail] = useState<string>(\"\");\r\n  const [password, updatepassword] = useState<string>(\"\");\r\n  const [error, seterror] = useState<String | null>(null);\r\n  const [friendList, setfriendList] = useState<any[]>([]);\r\n  const history=useHistory(); \r\n  \r\n  const dispatch=useDispatch();\r\n  useEffect(() => {\r\n    button = false;\r\n    const userFun = async () => {\r\n      const responce = await fetch(\r\n        \"https://todo-list-64f41-default-rtdb.firebaseio.com/User.json\"\r\n      );\r\n      const responseData = await responce.json();\r\n      const userList = [];\r\n\r\n      for (const key in responseData) {\r\n        userList.push({\r\n          id: key,\r\n          email: String(responseData[key].email),\r\n          password: String(responseData[key].password),\r\n        });\r\n      }\r\n      setfriendList(userList);\r\n      //console.log(userList);\r\n    };\r\n    userFun();\r\n  }, []);\r\n\r\n  function getValue1(event: any) {\r\n    updateemail(event.target.value);\r\n    seterror(null);\r\n  }\r\n  function getValue2(event: any) {\r\n    updatepassword(event.target.value);\r\n    seterror(null);\r\n  }\r\n\r\n  function handle(e: any) {\r\n    e.preventDefault();\r\n    friendList.map((friend) => {\r\n      console.log(\"friend\",friend)\r\n      if (friend.email === email && friend.password === password) {\r\n        button = true;\r\n        history.push(\"/status\");\r\n        dispatch(fetchAction(friend))\r\n        window.localStorage.setItem(\"Info\", JSON.stringify(friend));\r\n      }\r\n      return null;\r\n    });\r\n    //console.log(\"button\",button);\r\n    if(!button){\r\n      seterror(\"Wrong User Id and Password\");\r\n  }\r\n  }\r\n  return (\r\n    <div>\r\n      <div className=\"Logindiv\">\r\n        <form onSubmit={handle}>\r\n          <div>\r\n            <h2>Login Form</h2>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"email\" id=\"email\" className=\"Loginlabel\">\r\n              Email\r\n            </label>\r\n            <input\r\n              className=\"Logininput1\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={getValue1}\r\n              required\r\n            />\r\n          </div>\r\n          <br />\r\n          <div>\r\n            <label htmlFor=\"password\" id=\"password\" className=\"Loginlabel\">\r\n              Password\r\n            </label>\r\n            <input\r\n              className=\"Logininput2\"\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={password}\r\n              onChange={getValue2}\r\n              required\r\n            />\r\n          </div>\r\n          <br />\r\n          <div>\r\n            {console.log(button)}\r\n              <button className=\"Loginbutton\" type=\"submit\">\r\n                Login\r\n              </button>\r\n            \r\n            <button className=\"Loginregisterbutton\">\r\n              <Link\r\n                to=\"/Register\"\r\n                style={{ textDecoration: \"none\" }}\r\n                className=\"Registerloginbuttonlink\"\r\n              >\r\n                Register\r\n              </Link>\r\n            </button>\r\n          </div>\r\n          {button ? (\r\n            <div></div>\r\n          ) : (\r\n            <div className=\"Errorkdiv\">\r\n              <h2 className=\"Errorheading\">{error}</h2>\r\n            </div>\r\n          )}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default User;\r\n"]},"metadata":{},"sourceType":"module"}