{"ast":null,"code":"var _jsxFileName = \"E:\\\\ReactJs\\\\my-app\\\\src\\\\Register.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { NavLink, Redirect, useHistory, withRouter } from 'react-router-dom';\nimport firebase from \"./firebase_config\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [cpassword, cSetPassword] = useState(\"\");\n  const [complete, setcomplete] = useState(false);\n  const [error, seterror] = useState(\"\");\n  const history = useHistory();\n\n  function getValue1(event) {\n    setEmail(event.target.value);\n  }\n\n  function getValue2(event) {\n    setPassword(event.target.value);\n  }\n\n  function getValue3(event) {\n    cSetPassword(event.target.value);\n  }\n\n  const handle = event => {\n    event.preventDefault();\n\n    if (password !== cpassword) {\n      seterror(\"Password dose not match\");\n    } else {\n      const todoref = firebase.database().ref(\"User\");\n      const todo = {\n        email: email,\n        password: password\n      };\n      todoref.push(todo);\n      setcomplete(true);\n      seterror(\"Password is match\");\n    }\n  };\n\n  const signup = () => {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Registerdiv\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handle,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Signup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          id: \"email\",\n          className: \"Registerlabel\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"Registerinput1\",\n          type: \"email\",\n          name: \"email\",\n          value: email,\n          onChange: getValue1,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          id: \"password\",\n          className: \"Registerlabel\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"Registerinput2\",\n          type: \"password\",\n          name: \"password\",\n          value: password,\n          onChange: getValue2,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"cpassword\",\n          id: \"cpassword\",\n          className: \"Registerlabel\",\n          children: \"Confirm Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"Registerinput3\",\n          type: \"password\",\n          name: \"cpassword\",\n          value: cpassword,\n          onChange: getValue3,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), \" \", console.log(complete), complete ? {\n        signup\n      } : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Registerbutton\",\n        type: \"submit\",\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"Registerbutton\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/\",\n          style: {\n            textDecoration: 'none'\n          },\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 62\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"e3v/Dvwc68TCVEMP9TW8WceVODM=\", false, function () {\n  return [useHistory];\n});\n\n_c = Register;\nexport default _c2 = withRouter(Register);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Register\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["E:/ReactJs/my-app/src/Register.tsx"],"names":["React","useState","NavLink","Redirect","useHistory","withRouter","firebase","Register","email","setEmail","password","setPassword","cpassword","cSetPassword","complete","setcomplete","error","seterror","history","getValue1","event","target","value","getValue2","getValue3","handle","preventDefault","todoref","database","ref","todo","push","signup","console","log","textDecoration"],"mappings":"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","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport { NavLink, Redirect, useHistory, withRouter } from 'react-router-dom';\r\nimport firebase from \"./firebase_config\";\r\n\r\nconst Register=()=>{\r\n    const [email,setEmail]=useState<string>(\"\");\r\n    const [password,setPassword]=useState<string | number >(\"\");\r\n    const [cpassword,cSetPassword]=useState<string | number >(\"\");\r\n    const [complete,setcomplete]=useState<boolean>(false);\r\n    const [error , seterror]=useState<string>(\"\");\r\n    const history=useHistory();\r\n     \r\n    function getValue1(event: { target: { value: React.SetStateAction<string>; }; }){   \r\n        setEmail(event.target.value);\r\n\r\n    }\r\n      function getValue2(event: { target: { value: React.SetStateAction<string | number>; }; }){   \r\n        setPassword(event.target.value);\r\n        \r\n    }\r\n    function getValue3(event: { target: { value: React.SetStateAction<string | number>; }; }){   \r\n        cSetPassword(event.target.value);\r\n        \r\n    }\r\n\r\n    const handle=(event: any)=>{\r\n        event.preventDefault();\r\n            if(password!==cpassword){\r\n                seterror(\"Password dose not match\");\r\n            }\r\n            else{\r\n                const todoref = firebase.database().ref(\"User\");\r\n                const todo ={email:email,password:password}\r\n                todoref.push(todo);\r\n                setcomplete(true);\r\n                seterror(\"Password is match\")\r\n            }\r\n    }\r\n    \r\n    const signup=()=>{\r\n        return <Redirect to=\"/\"/>\r\n    }\r\n    return(\r\n    <div className=\"Registerdiv\">\r\n        <form onSubmit={handle}>\r\n            <div><h2>Signup</h2></div>\r\n            <div>\r\n                <label htmlFor=\"email\" id=\"email\" className=\"Registerlabel\">Email</label>\r\n                <input className=\"Registerinput1\" type=\"email\" name=\"email\" value={email} onChange={getValue1} required/>\r\n            </div>\r\n            <br/>\r\n            <div>\r\n                <label htmlFor=\"password\" id=\"password\" className=\"Registerlabel\">Password</label>\r\n                <input className=\"Registerinput2\" type=\"password\" name=\"password\" value={password} onChange={getValue2} required/>\r\n            </div>   \r\n            \r\n            <div>\r\n                <label htmlFor=\"cpassword\" id=\"cpassword\" className=\"Registerlabel\">Confirm Password</label>\r\n                <input className=\"Registerinput3\" type=\"password\" name=\"cpassword\" value={cpassword} onChange={getValue3} required/>\r\n            </div> {console.log(complete)}\r\n           {complete ? {signup} :<button className=\"Registerbutton\" type=\"submit\">Signup</button> }\r\n            <button type=\"button\" className=\"Registerbutton\"><NavLink to=\"/\" style={{ textDecoration: 'none' }}>Login</NavLink></button>\r\n        </form>\r\n    </div>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default withRouter(Register);\r\n\r\n"]},"metadata":{},"sourceType":"module"}