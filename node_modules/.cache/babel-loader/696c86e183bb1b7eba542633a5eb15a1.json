{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport firebase from \"../Firebase/firebase_config\";\n\nconst useLocalStorage = () => {\n  _s();\n\n  const [item, setitem] = useState([]);\n  const [isloading, setisloading] = useState(true);\n  const history = useHistory();\n  useEffect(() => {\n    if (!window.localStorage.getItem(\"Info\")) {\n      return history.push(\"/\");\n    }\n\n    setisloading(true);\n    const todoref = firebase.database().ref(\"TODO\");\n    todoref.on('value', snapshot => {\n      const todo = snapshot.val();\n      const Items = [];\n\n      for (let id in todo) {\n        if (todo[id].Infoid === JSON.parse(Object(window.localStorage.getItem(\"Info\"))).id) {\n          //console.log(\"ID\",todo[id].Infoid)\n          Items.push({\n            id,\n            ...todo[id]\n          });\n        }\n      } //console.log(\"Items\",JSON.stringify((Items)));\n\n\n      setitem(Items);\n      setisloading(false);\n    });\n  }, [history]); //console.log(\"getlocal firsbase\",item);\n\n  return [JSON.parse(JSON.stringify(item)), isloading];\n};\n\n_s(useLocalStorage, \"NO06BnsFKTcLaF28NP30UnyZybs=\", false, function () {\n  return [useHistory];\n});\n\nexport default useLocalStorage;","map":{"version":3,"sources":["E:/ReactJs/my-app/src/API/getFirebaseTODo.tsx"],"names":["useEffect","useState","useHistory","firebase","useLocalStorage","item","setitem","isloading","setisloading","history","window","localStorage","getItem","push","todoref","database","ref","on","snapshot","todo","val","Items","id","Infoid","JSON","parse","Object","stringify"],"mappings":";;AAAA,SAAUA,SAAV,EAAqBC,QAArB,QAAqC,OAArC;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,OAAOC,QAAP,MAAqB,6BAArB;;AAEA,MAAMC,eAAe,GAAC,MAAI;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAeL,QAAQ,CAAW,EAAX,CAA7B;AACA,QAAM,CAACM,SAAD,EAAWC,YAAX,IAAyBP,QAAQ,CAAU,IAAV,CAAvC;AACA,QAAMQ,OAAO,GAAGP,UAAU,EAA1B;AAEAF,EAAAA,SAAS,CAAC,MAAI;AACV,QAAG,CAAEU,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,CAAL,EAA0C;AACtC,aAAOH,OAAO,CAACI,IAAR,CAAa,GAAb,CAAP;AACD;;AAEHL,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,UAAMM,OAAO,GAAGX,QAAQ,CAACY,QAAT,GAAoBC,GAApB,CAAwB,MAAxB,CAAhB;AACAF,IAAAA,OAAO,CAACG,EAAR,CAAW,OAAX,EAAoBC,QAAD,IAAY;AAC3B,YAAMC,IAAI,GAAED,QAAQ,CAACE,GAAT,EAAZ;AACA,YAAMC,KAAK,GAAE,EAAb;;AACA,WAAI,IAAIC,EAAR,IAAcH,IAAd,EAAoB;AAChB,YAAGA,IAAI,CAACG,EAAD,CAAJ,CAASC,MAAT,KAAkBC,IAAI,CAACC,KAAL,CAAWC,MAAM,CAAEhB,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,MAA5B,CAAF,CAAjB,EAA0DU,EAA/E,EAAkF;AAClF;AACAD,UAAAA,KAAK,CAACR,IAAN,CAAW;AAACS,YAAAA,EAAD;AAAI,eAAGH,IAAI,CAACG,EAAD;AAAX,WAAX;AAA6B;AAChC,OAP0B,CAQ3B;;;AACDhB,MAAAA,OAAO,CAACe,KAAD,CAAP;AACAb,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACF,KAXD;AAaP,GApBY,EAoBX,CAACC,OAAD,CApBW,CAAT,CALsB,CA2BtB;;AACA,SAAO,CAACe,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACG,SAAL,CAAetB,IAAf,CAAX,CAAD,EAAkCE,SAAlC,CAAP;AACH,CA7BD;;GAAMH,e;UAGcF,U;;;AA2BpB,eAAeE,eAAf","sourcesContent":["import  { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport firebase from \"../Firebase/firebase_config\";\r\n\r\nconst useLocalStorage=()=>{\r\n    const [item,setitem]=useState<object[]>([]);\r\n    const [isloading,setisloading]=useState<boolean>(true);\r\n    const history = useHistory();\r\n\r\n    useEffect(()=>{\r\n        if(!(window.localStorage.getItem(\"Info\"))){\r\n            return history.push(\"/\"); \r\n          }\r\n        \r\n        setisloading(true);\r\n        const todoref = firebase.database().ref(\"TODO\");\r\n        todoref.on('value',(snapshot)=>{\r\n            const todo= snapshot.val();\r\n            const Items =[];\r\n            for(let id in todo ){\r\n                if(todo[id].Infoid===JSON.parse(Object((window.localStorage.getItem(\"Info\")))).id){\r\n                //console.log(\"ID\",todo[id].Infoid)\r\n                Items.push({id,...todo[id]})}\r\n            }\r\n            //console.log(\"Items\",JSON.stringify((Items)));\r\n           setitem(Items);\r\n           setisloading(false);\r\n        }\r\n    )\r\n},[history])\r\n    \r\n    //console.log(\"getlocal firsbase\",item);\r\n    return [JSON.parse(JSON.stringify(item)),isloading];\r\n}\r\nexport default useLocalStorage;"]},"metadata":{},"sourceType":"module"}