{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport firebase from \"./firebase_config\";\n\nconst useLocalStorage = () => {\n  _s();\n\n  const [item, setitem] = useState([]);\n  useEffect(() => {\n    const todoref = firebase.database().ref(\"TODO\");\n    todoref.on('value', snapshot => {\n      const todo = snapshot.val();\n      const Items = [];\n\n      for (let id in todo) {\n        Items.push({\n          id,\n          ...todo[id]\n        });\n      }\n\n      setitem(Items);\n    });\n  }, []); //console.log(\"getlocal firsbase\",item);\n\n  return JSON.stringify(item);\n};\n\n_s(useLocalStorage, \"pRdIiGZ9soKpLX94JRaOfbCdgeA=\");\n\nexport default useLocalStorage;","map":{"version":3,"sources":["E:/ReactJs/my-app/src/getlocal.tsx"],"names":["useEffect","useState","firebase","useLocalStorage","item","setitem","todoref","database","ref","on","snapshot","todo","val","Items","id","push","JSON","stringify"],"mappings":";;AAAA,SAAUA,SAAV,EAAqBC,QAArB,QAAqC,OAArC;AACA,OAAOC,QAAP,MAAqB,mBAArB;;AAEA,MAAMC,eAAe,GAAC,MAAI;AAAA;;AACtB,QAAM,CAACC,IAAD,EAAMC,OAAN,IAAeJ,QAAQ,CAAW,EAAX,CAA7B;AACAD,EAAAA,SAAS,CAAC,MAAI;AACV,UAAMM,OAAO,GAAGJ,QAAQ,CAACK,QAAT,GAAoBC,GAApB,CAAwB,MAAxB,CAAhB;AACAF,IAAAA,OAAO,CAACG,EAAR,CAAW,OAAX,EAAoBC,QAAD,IAAY;AAC3B,YAAMC,IAAI,GAAED,QAAQ,CAACE,GAAT,EAAZ;AACA,YAAMC,KAAK,GAAE,EAAb;;AACA,WAAI,IAAIC,EAAR,IAAcH,IAAd,EAAoB;AAChBE,QAAAA,KAAK,CAACE,IAAN,CAAW;AAACD,UAAAA,EAAD;AAAI,aAAGH,IAAI,CAACG,EAAD;AAAX,SAAX;AACH;;AAEFT,MAAAA,OAAO,CAACQ,KAAD,CAAP;AACF,KARD;AASP,GAXY,EAWX,EAXW,CAAT,CAFsB,CAetB;;AACA,SAAOG,IAAI,CAACC,SAAL,CAAeb,IAAf,CAAP;AACH,CAjBD;;GAAMD,e;;AAkBN,eAAeA,eAAf","sourcesContent":["import  { useEffect, useState } from \"react\";\r\nimport firebase from \"./firebase_config\";\r\n\r\nconst useLocalStorage=()=>{\r\n    const [item,setitem]=useState<object[]>([]);\r\n    useEffect(()=>{\r\n        const todoref = firebase.database().ref(\"TODO\");\r\n        todoref.on('value',(snapshot)=>{\r\n            const todo= snapshot.val();\r\n            const Items =[];\r\n            for(let id in todo ){\r\n                Items.push({id,...todo[id]})\r\n            }\r\n            \r\n           setitem(Items);\r\n        })\r\n},[])\r\n    \r\n    //console.log(\"getlocal firsbase\",item);\r\n    return JSON.stringify(item);\r\n}\r\nexport default useLocalStorage;"]},"metadata":{},"sourceType":"module"}