{"ast":null,"code":"var _jsxFileName = \"E:\\\\ReactJs\\\\my-app\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"./app.css\";\nimport Input from './Input';\nimport Button from './button';\nimport { RiDeleteBin6Line, RiEdit2Fill } from \"react-icons/ri\"; //import useStorage from \"./local\";\n//import useLocalStorage from \"./getlocal\";\n\nimport { NavLink } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [newInputData, setNewInputData] = useState(\"\");\n  const [list, setList] = useState([]);\n  const [edititem, updateedititem] = useState(true);\n  const [editinput, seteditinput] = useState(\"\");\n  useEffect(() => {\n    for (let i = 0; i < list.length; i++) {\n      fetch('https://todo-list-64f41-default-rtdb.firebaseio.com/TODO.json', {\n        method: 'POST',\n        body: JSON.stringify({\n          id: list[i].id,\n          name: list[i].name\n        })\n      });\n    }\n\n    const TODO = async () => {\n      const responce = await fetch('https://todo-list-64f41-default-rtdb.firebaseio.com/TODO.json');\n      const responseData = await responce.json();\n      const Items = [];\n\n      for (const key in responseData) {\n        Items.push({\n          id: String(responseData[key].id),\n          name: String(responseData[key].name)\n        });\n      }\n\n      setList(Items);\n    };\n\n    TODO();\n  }, [list]); //useStorage(list);\n\n  console.log(\"fetched\", list); //console.log(\"uselocalStorage\",JSON.parse(useLocalStorage()))\n\n  function getValue(event) {\n    setNewInputData(event.target.value);\n  }\n\n  ;\n\n  const updateData = () => {\n    if (!newInputData) {\n      alert('Please Fill The Data');\n    } else if (newInputData && !edititem) {\n      setList(list.map(ele => {\n        if (ele.id === editinput) {\n          return { ...ele,\n            name: newInputData\n          };\n        }\n\n        return ele;\n      }));\n      updateedititem(true);\n      setNewInputData('');\n      seteditinput(\"\");\n    } else {\n      const allinput = {\n        id: new Date().getTime().toString(),\n        name: newInputData\n      };\n      setList([...list, allinput]);\n      setNewInputData(\"\");\n    }\n  };\n\n  const deleteEle = index => {\n    const updatelist = list.filter(items => {\n      return index !== items.id;\n    });\n    setList(updatelist);\n  };\n\n  const editEle = id => {\n    let edit = list.find(ele => {\n      return ele.id === id;\n    });\n    updateedititem(false);\n    setNewInputData(edit.name);\n    seteditinput(id);\n  };\n\n  const cutit = id => {\n    const newlist = list.map(ele => {\n      if (ele.id === id) {\n        return { ...ele,\n          done: !ele.done\n        };\n      }\n\n      return ele;\n    });\n    setList(newlist);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Divbody\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Logoutbutton\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/\",\n          style: {\n            textDecoration: 'none'\n          },\n          className: \"Logoutbuttonlink\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      data: newInputData,\n      value: getValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: list.map(listitems => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Showmain\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Show1\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onClick: () => cutit(listitems.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Show2\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  textDecoration: listitems.done ? \"line-through\" : \"none\"\n                },\n                children: listitems.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Show3\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                title: \"Delete Item\",\n                onClick: () => deleteEle(listitems.id),\n                children: /*#__PURE__*/_jsxDEV(RiDeleteBin6Line, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 89\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Show4\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                title: \"Edit Item\",\n                onClick: () => editEle(listitems.id),\n                children: /*#__PURE__*/_jsxDEV(RiEdit2Fill, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 85\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }, this)]\n          }, listitems.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 17\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), edititem ? /*#__PURE__*/_jsxDEV(Button, {\n      data: updateData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: updateData,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 52\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"IQN3OL9sdlGvzMI6SAHOwe6GD2Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/ReactJs/my-app/src/App.tsx"],"names":["React","useEffect","useState","Input","Button","RiDeleteBin6Line","RiEdit2Fill","NavLink","App","newInputData","setNewInputData","list","setList","edititem","updateedititem","editinput","seteditinput","i","length","fetch","method","body","JSON","stringify","id","name","TODO","responce","responseData","json","Items","key","push","String","console","log","getValue","event","target","value","updateData","alert","map","ele","allinput","Date","getTime","toString","deleteEle","index","updatelist","filter","items","editEle","edit","find","cutit","newlist","done","textDecoration","listitems"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,gBAAT,EAA0BC,WAA1B,QAA6C,gBAA7C,C,CACA;AACA;;AACA,SAAUC,OAAV,QAAyB,kBAAzB;;;;AAEA,MAAMC,GAAG,GAAC,MAAI;AAAA;;AAEV,QAAM,CAACC,YAAD,EAAcC,eAAd,IAA+BR,QAAQ,CAAS,EAAT,CAA7C;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAQ,EAAR,CAAhC;AACA,QAAM,CAACW,QAAD,EAAUC,cAAV,IAA0BZ,QAAQ,CAAU,IAAV,CAAxC;AACA,QAAM,CAACa,SAAD,EAAWC,YAAX,IAAyBd,QAAQ,CAAgB,EAAhB,CAAvC;AAGAD,EAAAA,SAAS,CAAC,MAAI;AACV,SAAI,IAAIgB,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACN,IAAI,CAACO,MAAnB,EAA0BD,CAAC,EAA3B,EAA8B;AAC9BE,MAAAA,KAAK,CAAC,+DAAD,EAAiE;AACtEC,QAAAA,MAAM,EAAE,MAD8D;AAEtEC,QAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAe;AAChBC,UAAAA,EAAE,EAACb,IAAI,CAACM,CAAD,CAAJ,CAAQO,EADK;AAEhBC,UAAAA,IAAI,EAACd,IAAI,CAACM,CAAD,CAAJ,CAAQQ;AAFG,SAAf;AAFiE,OAAjE,CAAL;AAOE;;AAEF,UAAMC,IAAI,GAAE,YAChB;AACI,YAAMC,QAAQ,GAAC,MAAMR,KAAK,CAAC,+DAAD,CAA1B;AACA,YAAMS,YAAY,GAAG,MAAMD,QAAQ,CAACE,IAAT,EAA3B;AACA,YAAMC,KAAK,GAAC,EAAZ;;AACA,WAAI,MAAMC,GAAV,IAAiBH,YAAjB,EACA;AACIE,QAAAA,KAAK,CAACE,IAAN,CACA;AACIR,UAAAA,EAAE,EAACS,MAAM,CAACL,YAAY,CAACG,GAAD,CAAZ,CAAkBP,EAAnB,CADb;AAEIC,UAAAA,IAAI,EAACQ,MAAM,CAACL,YAAY,CAACG,GAAD,CAAZ,CAAkBN,IAAnB;AAFf,SADA;AAKH;;AACDb,MAAAA,OAAO,CAACkB,KAAD,CAAP;AACH,KAdG;;AAeJJ,IAAAA,IAAI;AACP,GA3BY,EA2BX,CAACf,IAAD,CA3BW,CAAT,CARU,CAqCV;;AACAuB,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAsBxB,IAAtB,EAtCU,CAuCV;;AACA,WAASyB,QAAT,CAAkBC,KAAlB,EAA+E;AAC3E3B,IAAAA,eAAe,CAAC2B,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AACH;;AAAA;;AACD,QAAMC,UAAU,GAAC,MAAI;AACjB,QAAG,CAAC/B,YAAJ,EAAiB;AACjBgC,MAAAA,KAAK,CAAC,sBAAD,CAAL;AACC,KAFD,MAGK,IAAGhC,YAAY,IAAI,CAACI,QAApB,EAA6B;AAC9BD,MAAAA,OAAO,CAACD,IAAI,CAAC+B,GAAL,CAAUC,GAAD,IAAW;AACxB,YAAGA,GAAG,CAACnB,EAAJ,KAAST,SAAZ,EAAsB;AAClB,iBAAM,EAAC,GAAG4B,GAAJ;AAAQlB,YAAAA,IAAI,EAAChB;AAAb,WAAN;AACH;;AACD,eAAOkC,GAAP;AACH,OALO,CAAD,CAAP;AAOJ7B,MAAAA,cAAc,CAAC,IAAD,CAAd;AACAJ,MAAAA,eAAe,CAAC,EAAD,CAAf;AACAM,MAAAA,YAAY,CAAC,EAAD,CAAZ;AACC,KAXI,MAaL;AACA,YAAM4B,QAAe,GAAC;AAACpB,QAAAA,EAAE,EAAE,IAAIqB,IAAJ,GAAWC,OAAX,GAAqBC,QAArB,EAAL;AAAqCtB,QAAAA,IAAI,EAAChB;AAA1C,OAAtB;AACAG,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAASiC,QAAT,CAAD,CAAP;AACAlC,MAAAA,eAAe,CAAC,EAAD,CAAf;AACC;AACA,GAtBL;;AAuBA,QAAMsC,SAAS,GAAEC,KAAD,IAAa;AACzB,UAAMC,UAAU,GAACvC,IAAI,CAACwC,MAAL,CAAaC,KAAD,IAAU;AACnC,aAAOH,KAAK,KAAKG,KAAK,CAAC5B,EAAvB;AACH,KAFgB,CAAjB;AAGAZ,IAAAA,OAAO,CAACsC,UAAD,CAAP;AACH,GALD;;AAMA,QAAMG,OAAO,GAAE7B,EAAD,IAAoB;AAC9B,QAAI8B,IAAI,GAAC3C,IAAI,CAAC4C,IAAL,CAAWZ,GAAD,IAAO;AACrB,aAAOA,GAAG,CAACnB,EAAJ,KAASA,EAAhB;AACJ,KAFQ,CAAT;AAGAV,IAAAA,cAAc,CAAC,KAAD,CAAd;AACAJ,IAAAA,eAAe,CAAC4C,IAAI,CAAC7B,IAAN,CAAf;AACAT,IAAAA,YAAY,CAACQ,EAAD,CAAZ;AACH,GAPD;;AAQA,QAAMgC,KAAK,GAAEhC,EAAD,IAAa;AACrB,UAAMiC,OAAO,GAAC9C,IAAI,CAAC+B,GAAL,CAAUC,GAAD,IAAO;AAC1B,UAAGA,GAAG,CAACnB,EAAJ,KAASA,EAAZ,EAAe;AACX,eAAO,EAAC,GAAGmB,GAAJ;AAAQe,UAAAA,IAAI,EAAC,CAACf,GAAG,CAACe;AAAlB,SAAP;AACH;;AACL,aAAOf,GAAP;AACC,KALa,CAAd;AAMA/B,IAAAA,OAAO,CAAC6C,OAAD,CAAP;AACH,GARD;;AASA,sBACA;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI;AAAA,6BACA;AAAQ,QAAA,SAAS,EAAC,cAAlB;AAAA,+BAAiC,QAAC,OAAD;AAAS,UAAA,EAAE,EAAC,GAAZ;AAAgB,UAAA,KAAK,EAAE;AAAEE,YAAAA,cAAc,EAAE;AAAlB,WAAvB;AAAmD,UAAA,SAAS,EAAC,kBAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAjC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,YADJ,eAII,QAAC,KAAD;AAAO,MAAA,IAAI,EAAElD,YAAb;AAA2B,MAAA,KAAK,EAAE2B;AAAlC;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAA,gBACMzB,IAAI,CAAC+B,GAAL,CAAUkB,SAAD,IAAa;AACpB,4BAAQ;AAAA,iCACR;AAAwB,YAAA,SAAS,EAAC,UAAlC;AAAA,oCACI;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,qCACI;AAAO,gBAAA,IAAI,EAAC,UAAZ;AAAuB,gBAAA,OAAO,EAAE,MAAIJ,KAAK,CAACI,SAAS,CAACpC,EAAX;AAAzC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAII;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,qCACI;AAAI,gBAAA,KAAK,EAAE;AAACmC,kBAAAA,cAAc,EAAEC,SAAS,CAACF,IAAV,GAAiB,cAAjB,GAAkC;AAAnD,iBAAX;AAAA,0BAAwEE,SAAS,CAACnC;AAAlF;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAOI;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,qCACI;AAAM,gBAAA,KAAK,EAAC,aAAZ;AAA0B,gBAAA,OAAO,EAAE,MAAIuB,SAAS,CAACY,SAAS,CAACpC,EAAX,CAAhD;AAAA,uCAAgE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAhE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAPJ,eAUI;AAAK,cAAA,SAAS,EAAC,OAAf;AAAA,qCACI;AAAM,gBAAA,KAAK,EAAC,WAAZ;AAAwB,gBAAA,OAAO,EAAE,MAAI6B,OAAO,CAACO,SAAS,CAACpC,EAAX,CAA5C;AAAA,uCAA4D,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAA5D;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAVJ;AAAA,aAAUoC,SAAS,CAACpC,EAApB;AAAA;AAAA;AAAA;AAAA;AADQ,yBAAR;AAiBH,OAlBC;AADN;AAAA;AAAA;AAAA;AAAA,YALJ,EA2BQX,QAAQ,gBAAG,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAE2B;AAAd;AAAA;AAAA;AAAA;AAAA,YAAH,gBAA+B;AAAQ,MAAA,SAAS,EAAC,KAAlB;AAAwB,MAAA,OAAO,EAAEA,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA3B/C;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAgCC,CAzHL;;GAAMhC,G;;KAAAA,G;AA2HN,eAAeA,GAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport \"./app.css\";\r\nimport Input from './Input';\r\nimport Button from './button';\r\nimport { RiDeleteBin6Line,RiEdit2Fill } from \"react-icons/ri\";\r\n//import useStorage from \"./local\";\r\n//import useLocalStorage from \"./getlocal\";\r\nimport {  NavLink } from 'react-router-dom';\r\n\r\nconst App=()=>{\r\n    \r\n    const [newInputData,setNewInputData]=useState<string>(\"\");\r\n    const [list, setList] = useState<any[]>([]);\r\n    const [edititem,updateedititem]=useState<boolean>(true);\r\n    const [editinput,seteditinput]=useState<number|string>(\"\");\r\n    \r\n    \r\n    useEffect(()=>{\r\n        for(let i=0;i<list.length;i++){\r\n        fetch('https://todo-list-64f41-default-rtdb.firebaseio.com/TODO.json',{\r\n        method: 'POST',\r\n        body:JSON.stringify({\r\n            id:list[i].id,\r\n            name:list[i].name\r\n            })\r\n      }\r\n        )}\r\n\r\n        const TODO= async ()=>\r\n    {\r\n        const responce=await fetch('https://todo-list-64f41-default-rtdb.firebaseio.com/TODO.json');\r\n        const responseData = await responce.json();\r\n        const Items=[];\r\n        for(const key in responseData)\r\n        {\r\n            Items.push(\r\n            {\r\n                id:String(responseData[key].id),\r\n                name:String(responseData[key].name),\r\n            })\r\n        }\r\n        setList(Items);\r\n    };\r\n    TODO();\r\n},[list])\r\n  \r\n    //useStorage(list);\r\n    console.log(\"fetched\",list);\r\n    //console.log(\"uselocalStorage\",JSON.parse(useLocalStorage()))\r\n    function getValue(event: { target: { value: React.SetStateAction<string>; }; }){   \r\n        setNewInputData(event.target.value);\r\n    };\r\n    const updateData=()=>{\r\n        if(!newInputData){\r\n        alert('Please Fill The Data');\r\n        }\r\n        else if(newInputData && !edititem){\r\n            setList(list.map((ele:any)=>{\r\n                if(ele.id===editinput){\r\n                    return{...ele,name:newInputData}\r\n                }\r\n                return ele;\r\n            }))\r\n            \r\n        updateedititem(true);\r\n        setNewInputData('');\r\n        seteditinput(\"\");\r\n        }\r\n        else\r\n        {\r\n        const allinput:object={id: new Date().getTime().toString(),name:newInputData};\r\n        setList([...list,allinput]);\r\n        setNewInputData(\"\");  \r\n        }\r\n        };\r\n    const deleteEle=(index:any)=>{\r\n        const updatelist=list.filter((items )=>{\r\n            return index !== items.id;\r\n        });\r\n        setList(updatelist) \r\n    }\r\n    const editEle=(id:number|string)=>{\r\n        let edit=list.find((ele)=>{\r\n             return ele.id===id;\r\n        });\r\n        updateedititem(false);\r\n        setNewInputData(edit.name);\r\n        seteditinput(id);\r\n    }   \r\n    const cutit=(id:number)=>{\r\n        const newlist=list.map((ele)=>{\r\n            if(ele.id===id){\r\n                return {...ele,done:!ele.done}\r\n            }\r\n        return ele;\r\n        })\r\n        setList(newlist);\r\n    }\r\n    return (\r\n    <div className=\"Divbody\">\r\n        <div>\r\n        <button className=\"Logoutbutton\"><NavLink to=\"/\" style={{ textDecoration: 'none' }} className=\"Logoutbuttonlink\">Logout</NavLink></button>\r\n        </div>\r\n        <Input data={newInputData} value={getValue}/>\r\n        <div>\r\n            { list.map((listitems)=>{\r\n                return (<>\r\n                <div key={listitems.id} className=\"Showmain\">\r\n                    <div className=\"Show1\">\r\n                        <input type=\"checkbox\" onClick={()=>cutit(listitems.id)}></input>\r\n                    </div>\r\n                    <div className=\"Show2\">\r\n                        <h3 style={{textDecoration: listitems.done ? \"line-through\" : \"none\"}}>{listitems.name}</h3>\r\n                    </div>\r\n                    <div className=\"Show3\">\r\n                        <span title=\"Delete Item\" onClick={()=>deleteEle(listitems.id)}><RiDeleteBin6Line/></span>\r\n                    </div>\r\n                    <div className=\"Show4\">\r\n                        <span title=\"Edit Item\" onClick={()=>editEle(listitems.id)}><RiEdit2Fill/></span>\r\n                    </div>\r\n                </div>\r\n                </>)\r\n            \r\n            })}\r\n        </div>\r\n        {\r\n            edititem ? <Button data={updateData}/>:<button className=\"btn\" onClick={updateData}>Edit</button> \r\n        }\r\n    </div>\r\n    )\r\n    }\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}