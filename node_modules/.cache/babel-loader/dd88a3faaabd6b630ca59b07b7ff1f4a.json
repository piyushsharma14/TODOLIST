{"ast":null,"code":"var _jsxFileName = \"E:\\\\ReactJs\\\\my-app\\\\assignment-1-2\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./app.css\";\nimport Input from './Input';\nimport Button from './button';\nimport { RiDeleteBin6Line, RiEdit2Fill } from \"react-icons/ri\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [newInputData, setNewInputData] = useState(null);\n  const [list, setList] = useState([]);\n  const [edititem, updateedititem] = useState(true);\n  const [editinput, seteditinput] = useState(null);\n\n  function getValue(event) {\n    setNewInputData(event.target.value);\n  }\n\n  ;\n\n  const updateData = () => {\n    if (!newInputData) {\n      alert('Please fill the data');\n    } else if (newInputData && !edititem) {\n      setList(list.map(ele => {\n        if (ele.id === editinput) {\n          return { ...ele,\n            name: newInputData\n          };\n        }\n\n        return ele;\n      }));\n    } else {\n      const allinput = {\n        id: new Date().getTime().toString(),\n        name: newInputData\n      };\n      setList([...list, allinput]);\n      setNewInputData(\"\");\n    }\n  };\n\n  const deleteEle = index => {\n    const updatelist = list.filter(items => {\n      return index !== items.id;\n    });\n    setList(updatelist);\n  };\n\n  const editEle = id => {\n    let edit = list.find(ele => {\n      return ele.id === id;\n    });\n    updateedititem(false);\n    setNewInputData(edit.name);\n    seteditinput(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Divbody\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      data: newInputData,\n      value: getValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: list.map(listitems => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: listitems.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Delete Item\",\n              onClick: () => deleteEle(listitems.id),\n              children: /*#__PURE__*/_jsxDEV(RiDeleteBin6Line, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 81\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \"Edit Item\",\n              onClick: () => editEle(listitems.id),\n              children: /*#__PURE__*/_jsxDEV(RiEdit2Fill, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 77\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 17\n            }, this)]\n          }, listitems.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), edititem ? /*#__PURE__*/_jsxDEV(Button, {\n      data: updateData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: updateData,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 52\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"yx2ACflGD5dqlzBM3c4gnKbUjPc=\");\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 74,\n  columnNumber: 17\n}, this), document.querySelector('#root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/ReactJs/my-app/assignment-1-2/src/index.js"],"names":["React","useState","ReactDOM","Input","Button","RiDeleteBin6Line","RiEdit2Fill","App","newInputData","setNewInputData","list","setList","edititem","updateedititem","editinput","seteditinput","getValue","event","target","value","updateData","alert","map","ele","id","name","allinput","Date","getTime","toString","deleteEle","index","updatelist","filter","items","editEle","edit","find","listitems","render","document","querySelector"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./app.css\";\r\nimport Input from './Input';\r\nimport Button from './button';\r\nimport { RiDeleteBin6Line,RiEdit2Fill } from \"react-icons/ri\";\r\n\r\nconst App=()=>{\r\n    const [newInputData,setNewInputData]=useState(null);\r\n    const [list, setList] = useState([]);\r\n    const [edititem,updateedititem]=useState(true);\r\n    const [editinput,seteditinput]=useState(null);\r\n    function getValue(event){   \r\n        setNewInputData(event.target.value);\r\n        \r\n    };\r\n    const updateData=()=>{\r\n        if(!newInputData){\r\n        alert('Please fill the data');\r\n        }\r\n        else if(newInputData && !edititem){\r\n            setList(list.map((ele)=>{\r\n                if(ele.id===editinput){\r\n                    return{...ele,name:newInputData}\r\n                }\r\n                return ele;\r\n            }))\r\n        }\r\n        else\r\n        {\r\n        const allinput={id: new Date().getTime().toString(),name:newInputData};\r\n        setList([...list,allinput]);\r\n        setNewInputData(\"\");  \r\n        }\r\n        };\r\n    const deleteEle=(index)=>{\r\n        const updatelist=list.filter( (items)=>{\r\n            return index !== items.id;\r\n        });\r\n        setList(updatelist) \r\n    }\r\n    const editEle=(id)=>{\r\n        let edit=list.find((ele)=>{\r\n             return ele.id===id\r\n        });\r\n        updateedititem(false);\r\n        setNewInputData(edit.name);\r\n        seteditinput(id);\r\n    }   \r\n\r\n    return (\r\n    <div className=\"Divbody\">\r\n        <Input data={newInputData} value={getValue}/>\r\n        <div>\r\n            { list.map((listitems)=>{\r\n                return (<>\r\n                <div key={listitems.id}>\r\n                <input type=\"checkbox\" ></input>\r\n                <h3>{listitems.name}</h3>\r\n                <span title=\"Delete Item\" onClick={()=>deleteEle(listitems.id)}><RiDeleteBin6Line/></span>\r\n                <span title=\"Edit Item\" onClick={()=>editEle(listitems.id)}><RiEdit2Fill/></span>\r\n                </div>\r\n                </>)\r\n            \r\n            })}\r\n        </div>\r\n        {\r\n            edititem ? <Button data={updateData}/>:<button className=\"btn\" onClick={updateData}>Edit</button> \r\n        }\r\n    </div>\r\n    )\r\n    }\r\n\r\nReactDOM.render(<App />,document.querySelector('#root'));"]},"metadata":{},"sourceType":"module"}