{"ast":null,"code":"var _jsxFileName = \"E:\\\\ReactJs\\\\my-app\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport \"./app.css\";\nimport Input from './Input';\nimport Button from './button';\nimport { RiDeleteBin6Line, RiEdit2Fill } from \"react-icons/ri\"; //import useStorage from \"./local\";\n\nimport useLocalStorage from \"./getlocal\";\nimport firebase from \"./firebase_config\";\nimport { NavLink } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [newInputData, setNewInputData] = useState(\"\");\n  const [list, setList] = useState(JSON.parse(useLocalStorage()));\n  const [edititem, updateedititem] = useState(true);\n  const [editinput, seteditinput] = useState(\"\");\n  useEffect(() => {\n    const TODO = async () => {\n      const responce = await fetch('https://todo-list-64f41-default-rtdb.firebaseio.com/TODO.json');\n      const responseData = await responce.json();\n      const Items = [];\n\n      for (const key in responseData) {\n        Items.push({\n          id: String(responseData[key].id),\n          name: String(responseData[key].name)\n        });\n      }\n\n      setList(Items);\n    };\n\n    TODO();\n  }, []); //useStorage(list);\n  //console.log(\"uselocalStorage\",JSON.parse(useLocalStorage()))\n\n  function getValue(event) {\n    setNewInputData(event.target.value);\n  }\n\n  ;\n\n  const updateData = () => {\n    if (!newInputData) {\n      alert('Please Fill The Data');\n    } else if (newInputData && !edititem) {\n      setList(list.map(ele => {\n        if (ele.id === editinput) {\n          return { ...ele,\n            name: newInputData\n          };\n        }\n\n        return ele;\n      }));\n      updateedititem(true);\n      setNewInputData('');\n      seteditinput(\"\");\n      const todoref = firebase.database().ref(\"TODO\");\n      const todo = {\n        name: newInputData\n      };\n      console.log(todo);\n      todoref.push(todo);\n    } else {\n      const allinput = {\n        id: new Date().getTime().toString(),\n        name: newInputData\n      };\n      setList([...list, allinput]);\n      setNewInputData(\"\");\n      const todoref = firebase.database().ref(\"TODO\");\n      const todo = {\n        name: newInputData\n      };\n      console.log(todo);\n      todoref.push(todo);\n    }\n  };\n\n  const deleteEle = index => {\n    const todoref = firebase.database().ref(\"TODO\").child(index);\n    console.log(todoref);\n  };\n\n  const editEle = id => {\n    let edit = list.find(ele => {\n      return ele.id === id;\n    });\n    updateedititem(false);\n    setNewInputData(edit.name);\n    seteditinput(id);\n  };\n\n  const cutit = id => {\n    const newlist = list.map(ele => {\n      if (ele.id === id) {\n        return { ...ele,\n          done: !ele.done\n        };\n      }\n\n      return ele;\n    });\n    setList(newlist);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Divbody\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Logoutbutton\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/\",\n          style: {\n            textDecoration: 'none'\n          },\n          className: \"Logoutbuttonlink\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      data: newInputData,\n      value: getValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: list.map(listitems => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Showmain\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Show1\",\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                onClick: () => cutit(listitems.id)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Show2\",\n              children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                style: {\n                  textDecoration: listitems.done ? \"line-through\" : \"none\"\n                },\n                children: listitems.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Show3\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                title: \"Delete Item\",\n                onClick: () => deleteEle(listitems.id),\n                children: /*#__PURE__*/_jsxDEV(RiDeleteBin6Line, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 89\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Show4\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                title: \"Edit Item\",\n                onClick: () => editEle(listitems.id),\n                children: /*#__PURE__*/_jsxDEV(RiEdit2Fill, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 85\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 21\n            }, this)]\n          }, listitems.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this)\n        }, void 0, false);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this), edititem ? /*#__PURE__*/_jsxDEV(Button, {\n      data: updateData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: updateData,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 52\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"EhGHZZ9daZk9WidG+pdbE2i9vyw=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/ReactJs/my-app/src/App.tsx"],"names":["React","useEffect","useState","Input","Button","RiDeleteBin6Line","RiEdit2Fill","useLocalStorage","firebase","NavLink","App","newInputData","setNewInputData","list","setList","JSON","parse","edititem","updateedititem","editinput","seteditinput","TODO","responce","fetch","responseData","json","Items","key","push","id","String","name","getValue","event","target","value","updateData","alert","map","ele","todoref","database","ref","todo","console","log","allinput","Date","getTime","toString","deleteEle","index","child","editEle","edit","find","cutit","newlist","done","textDecoration","listitems"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport \"./app.css\";\r\nimport Input from './Input';\r\nimport Button from './button';\r\nimport { RiDeleteBin6Line,RiEdit2Fill } from \"react-icons/ri\";\r\n//import useStorage from \"./local\";\r\nimport useLocalStorage from \"./getlocal\";\r\nimport firebase from \"./firebase_config\";\r\nimport {  NavLink } from 'react-router-dom';\r\n\r\nconst App=()=>{\r\n    \r\n    const [newInputData,setNewInputData]=useState<string>(\"\");\r\n    const [list, setList] = useState<any[]>(JSON.parse(useLocalStorage()));\r\n    const [edititem,updateedititem]=useState<boolean>(true);\r\n    const [editinput,seteditinput]=useState<number|string>(\"\");\r\n    \r\n    useEffect(()=>{\r\n        const TODO= async ()=>\r\n    {\r\n        const responce=await fetch('https://todo-list-64f41-default-rtdb.firebaseio.com/TODO.json');\r\n        const responseData = await responce.json();\r\n        const Items=[];\r\n        for(const key in responseData)\r\n        {\r\n            Items.push(\r\n            {\r\n                id:String(responseData[key].id),\r\n                name:String(responseData[key].name),\r\n            })\r\n        }\r\n        setList(Items);\r\n    };\r\n    TODO();\r\n},[])\r\n  \r\n    //useStorage(list);\r\n    //console.log(\"uselocalStorage\",JSON.parse(useLocalStorage()))\r\n    function getValue(event: { target: { value: React.SetStateAction<string>; }; }){   \r\n        setNewInputData(event.target.value);\r\n    };\r\n    const updateData=()=>{\r\n        if(!newInputData){\r\n        alert('Please Fill The Data');\r\n        }\r\n        else if(newInputData && !edititem){\r\n            setList(list.map((ele:any)=>{\r\n                if(ele.id===editinput){\r\n                    return{...ele,name:newInputData}\r\n                }\r\n                return ele;\r\n            }))\r\n            \r\n        updateedititem(true);\r\n        setNewInputData('');\r\n        seteditinput(\"\");\r\n        const todoref =firebase.database().ref(\"TODO\");\r\n        const todo ={name:newInputData}\r\n        console.log(todo);\r\n        todoref.push(todo);  \r\n          }\r\n        else\r\n        {\r\n        const allinput:object={id: new Date().getTime().toString(),name:newInputData};\r\n        setList([...list,allinput]);\r\n        setNewInputData(\"\");  \r\n        const todoref =firebase.database().ref(\"TODO\");\r\n        const todo ={name:newInputData}\r\n        \r\n        console.log(todo);\r\n        todoref.push(todo);\r\n        }\r\n        };\r\n    const deleteEle=(index:any)=>{\r\n       const todoref = firebase.database().ref(\"TODO\").child(index)\r\n       console.log(todoref);  \r\n    }\r\n    const editEle=(id:number|string)=>{\r\n        let edit=list.find((ele)=>{\r\n             return ele.id===id;\r\n        });\r\n        updateedititem(false);\r\n        setNewInputData(edit.name);\r\n        seteditinput(id);\r\n    }   \r\n    const cutit=(id:number)=>{\r\n        const newlist=list.map((ele)=>{\r\n            if(ele.id===id){\r\n                return {...ele,done:!ele.done}\r\n            }\r\n        return ele;\r\n        })\r\n        setList(newlist);\r\n    }\r\n    return (\r\n    <div className=\"Divbody\">\r\n        <div>\r\n        <button className=\"Logoutbutton\"><NavLink to=\"/\" style={{ textDecoration: 'none' }} className=\"Logoutbuttonlink\">Logout</NavLink></button>\r\n        </div>\r\n        <Input data={newInputData} value={getValue}/>\r\n        <div>\r\n            { list.map((listitems)=>{\r\n                return (<>\r\n                <div key={listitems.id} className=\"Showmain\">\r\n                    <div className=\"Show1\">\r\n                        <input type=\"checkbox\" onClick={()=>cutit(listitems.id)}></input>\r\n                    </div>\r\n                    <div className=\"Show2\">\r\n                        <h3 style={{textDecoration: listitems.done ? \"line-through\" : \"none\"}}>{listitems.name}</h3>\r\n                    </div>\r\n                    <div className=\"Show3\">\r\n                        <span title=\"Delete Item\" onClick={()=>deleteEle(listitems.id)}><RiDeleteBin6Line/></span>\r\n                    </div>\r\n                    <div className=\"Show4\">\r\n                        <span title=\"Edit Item\" onClick={()=>editEle(listitems.id)}><RiEdit2Fill/></span>\r\n                    </div>\r\n                </div>\r\n                </>)\r\n            \r\n            })}\r\n        </div>\r\n        {\r\n            edititem ? <Button data={updateData}/>:<button className=\"btn\" onClick={updateData}>Edit</button> \r\n        }\r\n    </div>\r\n    )\r\n    }\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}