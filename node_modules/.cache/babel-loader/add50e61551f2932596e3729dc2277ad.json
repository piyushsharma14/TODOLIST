{"ast":null,"code":"var _jsxFileName = \"E:\\\\ReactJs\\\\my-app\\\\assignment-1-2\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport \"./app.css\";\nimport Input from './Input';\nimport Button from './button';\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [newInputData, setNewInputData] = useState(null);\n  const [list, setList] = useState([]);\n\n  function getValue(event) {\n    setNewInputData(event.target.value);\n  }\n\n  ;\n\n  const updateData = () => {\n    if (!newInputData) {} else {\n      const allinput = {\n        id: new Date().getTime().toString(),\n        name: newInputData\n      };\n      setList([...list, allinput]);\n      setNewInputData(\"\");\n    }\n  };\n\n  function deleteEle(index) {\n    const updatelist = list.filter(items => {\n      return index !== items.id;\n    });\n    setList([updatelist]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Divbody\",\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      data: newInputData,\n      value: getValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: list.map(listitems => {\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: listitems.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 17\n            }, this)]\n          }, listitems.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: deleteEle(listitems.id),\n            children: /*#__PURE__*/_jsxDEV(RiDeleteBin6Line, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 59\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      data: updateData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"fNVT/hpPrYK4B5yH8qrib+oZiaQ=\");\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 53,\n  columnNumber: 17\n}, this), document.querySelector('#root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/ReactJs/my-app/assignment-1-2/src/index.js"],"names":["React","useState","ReactDOM","Input","Button","RiDeleteBin6Line","App","newInputData","setNewInputData","list","setList","getValue","event","target","value","updateData","allinput","id","Date","getTime","toString","name","deleteEle","index","updatelist","filter","items","map","listitems","render","document","querySelector"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,WAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,SAASC,gBAAT,QAAiC,gBAAjC;;;;AAEA,MAAMC,GAAG,GAAC,MAAI;AAAA;;AACV,QAAM,CAACC,YAAD,EAAcC,eAAd,IAA+BP,QAAQ,CAAC,IAAD,CAA7C;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC;;AAEA,WAASU,QAAT,CAAkBC,KAAlB,EAAwB;AACpBJ,IAAAA,eAAe,CAACI,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf;AAEH;;AAAA;;AACD,QAAMC,UAAU,GAAC,MAAI;AACjB,QAAG,CAACR,YAAJ,EAAiB,CAChB,CADD,MAGA;AACA,YAAMS,QAAQ,GAAC;AAACC,QAAAA,EAAE,EAAE,IAAIC,IAAJ,GAAWC,OAAX,GAAqBC,QAArB,EAAL;AAAqCC,QAAAA,IAAI,EAACd;AAA1C,OAAf;AACAG,MAAAA,OAAO,CAAC,CAAC,GAAGD,IAAJ,EAASO,QAAT,CAAD,CAAP;AACAR,MAAAA,eAAe,CAAC,EAAD,CAAf;AACC;AACA,GATL;;AAUA,WAASc,SAAT,CAAmBC,KAAnB,EAAyB;AACrB,UAAMC,UAAU,GAACf,IAAI,CAACgB,MAAL,CAAaC,KAAD,IAAS;AAClC,aAAOH,KAAK,KAAKG,KAAK,CAACT,EAAvB;AACH,KAFgB,CAAjB;AAGAP,IAAAA,OAAO,CAAC,CAACc,UAAD,CAAD,CAAP;AACH;;AACD,sBACA;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACI,QAAC,KAAD;AAAO,MAAA,IAAI,EAAEjB,YAAb;AAA2B,MAAA,KAAK,EAAEI;AAAlC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,gBACMF,IAAI,CAACkB,GAAL,CAAUC,SAAD,IAAa;AACpB,4BAAQ;AAAA,kCACR;AAAA,oCACA;AAAO,cAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAA,wBAAKA,SAAS,CAACP;AAAf;AAAA;AAAA;AAAA;AAAA,oBAFA;AAAA,aAAUO,SAAS,CAACX,EAApB;AAAA;AAAA;AAAA;AAAA,kBADQ,eAKR;AAAQ,YAAA,OAAO,EAAEK,SAAS,CAACM,SAAS,CAACX,EAAX,CAA1B;AAAA,mCAA0C,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAA1C;AAAA;AAAA;AAAA;AAAA,kBALQ;AAAA,wBAAR;AASH,OAVC;AADN;AAAA;AAAA;AAAA;AAAA,YAFJ,eAeI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAEF;AAAd;AAAA;AAAA;AAAA;AAAA,YAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADA;AAmBC,CA3CL;;GAAMT,G;;KAAAA,G;AA6CNJ,QAAQ,CAAC2B,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAwBC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAxB","sourcesContent":["import React, { useState } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport \"./app.css\";\r\nimport Input from './Input';\r\nimport Button from './button';\r\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\r\n\r\nconst App=()=>{\r\n    const [newInputData,setNewInputData]=useState(null);\r\n    const [list, setList] = useState([]);\r\n    \r\n    function getValue(event){   \r\n        setNewInputData(event.target.value);\r\n        \r\n    };\r\n    const updateData=()=>{\r\n        if(!newInputData){\r\n        }\r\n        else\r\n        {\r\n        const allinput={id: new Date().getTime().toString(),name:newInputData};\r\n        setList([...list,allinput]);\r\n        setNewInputData(\"\");  \r\n        }\r\n        };\r\n    function deleteEle(index){\r\n        const updatelist=list.filter((items)=>{\r\n            return index !== items.id;\r\n        });\r\n        setList([updatelist]);\r\n    }\r\n    return (\r\n    <div className=\"Divbody\">\r\n        <Input data={newInputData} value={getValue}/>\r\n        <div>\r\n            { list.map((listitems)=>{\r\n                return (<>\r\n                <div key={listitems.id}>\r\n                <input type=\"checkbox\" ></input>\r\n                <h3>{listitems.name}</h3>\r\n                </div>\r\n                <button onClick={deleteEle(listitems.id)}><RiDeleteBin6Line/></button>\r\n                \r\n                </>)\r\n            \r\n            })}\r\n        </div>\r\n        <Button data={updateData}/>\r\n    </div>\r\n    )\r\n    }\r\n\r\nReactDOM.render(<App />,document.querySelector('#root'));"]},"metadata":{},"sourceType":"module"}