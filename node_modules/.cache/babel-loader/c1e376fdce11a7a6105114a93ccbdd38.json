{"ast":null,"code":"var _jsxFileName = \"E:\\\\ReactJs\\\\my-app\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./app.css\";\nimport Input from \"./Input\";\nimport Button from \"./button\";\nimport { RiDeleteBin6Line, RiEdit2Fill } from \"react-icons/ri\";\nimport useLocalStorage from \"./getlocal\";\nimport firebase from \"./firebase_config\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [newInputData, setNewInputData] = useState(\"\");\n  const [edititem, updateedititem] = useState(true);\n  const [editinputid, seteditinputid] = useState(\"\"); //const value =useContext(Userid);\n\n  const [list, isloading] = useLocalStorage(); //custom hooks\n\n  function getValue(event) {\n    setNewInputData(event.target.value);\n  }\n\n  const updateData = () => {\n    if (!newInputData) {\n      alert(\"Please Fill The Data\");\n    } else if (newInputData && !edititem) {\n      const todoref = firebase.database().ref(\"TODO\");\n      console.log(\"todored\", todoref);\n      todoref.child(editinputid).update({\n        name: newInputData\n      });\n      updateedititem(true);\n      setNewInputData(\"\");\n      seteditinputid(\"\");\n    } else {\n      const todoref = firebase.database().ref(\"TODO\");\n      const Info = window.sessionStorage.getItem(\"Info\");\n      console.log(JSON.parse(Object(Info)).id);\n      const todo = {\n        Infoid: JSON.parse(Object(Info)).id,\n        name: newInputData,\n        done: false\n      };\n      todoref.push(todo);\n      setNewInputData(\"\");\n    }\n  };\n\n  const deleteEle = index => {\n    const todoref = firebase.database().ref(\"TODO\").child(index.id);\n    todoref.remove();\n  };\n\n  const editEle = id => {\n    let edit = list.find(ele => {\n      return ele.id === id;\n    }); //console.log(\"edit \",edit);\n\n    updateedititem(false);\n    setNewInputData(edit.name);\n    seteditinputid(id);\n  };\n\n  const cutit = linelist => {\n    const todoref = firebase.database().ref(\"TODO\").child(linelist.id);\n    todoref.update({\n      done: !linelist.done\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Divbody\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Logoutbutton\",\n        children: /*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/\",\n          style: {\n            textDecoration: \"none\"\n          },\n          className: \"Logoutbuttonlink\",\n          children: \"Logout\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      data: newInputData,\n      value: getValue,\n      loading: isloading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: list.map((listitems, index) => {\n        //console.log(\"listitem\",listitems.Infoid);\n        //console.log(\"2\",JSON.parse(Object((window.sessionStorage.getItem(\"Info\")))))\n        if (listitems.Infoid === JSON.parse(Object(window.sessionStorage.getItem(\"Info\"))).id) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Itemscard\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Showmain\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Show1\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  onClick: () => cutit(listitems)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Show2\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  style: {\n                    textDecoration: listitems.done ? \"line-through\" : \"none\"\n                  },\n                  children: listitems.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Show3\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  title: \"Delete Item\",\n                  onClick: () => deleteEle(listitems),\n                  children: /*#__PURE__*/_jsxDEV(RiDeleteBin6Line, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 114,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Show4\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  title: \"Edit Item\",\n                  onClick: () => editEle(listitems.id),\n                  children: /*#__PURE__*/_jsxDEV(RiEdit2Fill, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 122,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 17\n          }, this);\n        } else {\n          return null;\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), edititem ? /*#__PURE__*/_jsxDEV(Button, {\n      data: updateData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn\",\n      onClick: updateData,\n      children: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"+2WF4ZVjRnEDYPyv8cpvK06WL30=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/ReactJs/my-app/src/App.tsx"],"names":["React","useState","Input","Button","RiDeleteBin6Line","RiEdit2Fill","useLocalStorage","firebase","NavLink","App","newInputData","setNewInputData","edititem","updateedititem","editinputid","seteditinputid","list","isloading","getValue","event","target","value","updateData","alert","todoref","database","ref","console","log","child","update","name","Info","window","sessionStorage","getItem","JSON","parse","Object","id","todo","Infoid","done","push","deleteEle","index","remove","editEle","edit","find","ele","cutit","linelist","textDecoration","map","listitems"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./app.css\";\r\nimport Input from \"./Input\";\r\nimport Button from \"./button\";\r\nimport { RiDeleteBin6Line, RiEdit2Fill } from \"react-icons/ri\";\r\nimport useLocalStorage from \"./getlocal\";\r\nimport firebase from \"./firebase_config\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nconst App = () => {\r\n  const [newInputData, setNewInputData] = useState<string>(\"\");\r\n  const [edititem, updateedititem] = useState<boolean>(true);\r\n  const [editinputid, seteditinputid] = useState<string>(\"\");\r\n  //const value =useContext(Userid);\r\n\r\n  const [list, isloading] = useLocalStorage(); //custom hooks\r\n\r\n  function getValue(event: {\r\n    target: { value: React.SetStateAction<string> };\r\n  }) {\r\n    setNewInputData(event.target.value);\r\n  }\r\n\r\n  const updateData = () => {\r\n    if (!newInputData) {\r\n      alert(\"Please Fill The Data\");\r\n    } else if (newInputData && !edititem) {\r\n      const todoref = firebase.database().ref(\"TODO\");\r\n      console.log(\"todored\",todoref);\r\n      todoref.child(editinputid).update({\r\n        name: newInputData,\r\n      });\r\n      updateedititem(true);\r\n      setNewInputData(\"\");\r\n      seteditinputid(\"\");\r\n    } else {\r\n      const todoref = firebase.database().ref(\"TODO\");\r\n      const Info=window.sessionStorage.getItem(\"Info\");\r\n      console.log(JSON.parse(Object((Info))).id);\r\n      const todo = {Infoid:JSON.parse(Object((Info))).id,name: newInputData, done: false };\r\n      todoref.push(todo);\r\n      setNewInputData(\"\");\r\n    }\r\n  };\r\n\r\n  const deleteEle = (index: { id: string }) => {\r\n    const todoref = firebase.database().ref(\"TODO\").child(index.id);\r\n    todoref.remove();\r\n  };\r\n\r\n  const editEle = (id: string) => {\r\n    let edit = list.find((ele: { id: string }) => {\r\n      return ele.id === id;\r\n    });\r\n    //console.log(\"edit \",edit);\r\n    updateedititem(false);\r\n    setNewInputData(edit.name);\r\n    seteditinputid(id);\r\n  };\r\n  const cutit = (linelist: any) => {\r\n    const todoref = firebase.database().ref(\"TODO\").child(linelist.id);\r\n    todoref.update({\r\n      done: !linelist.done,\r\n    });\r\n  };\r\n  return (\r\n    <div className=\"Divbody\">\r\n      <div>\r\n        <button className=\"Logoutbutton\">\r\n          <NavLink\r\n            to=\"/\"\r\n            style={{ textDecoration: \"none\" }}\r\n            className=\"Logoutbuttonlink\"\r\n          >\r\n            Logout\r\n          </NavLink>\r\n        </button>\r\n      </div>\r\n      <Input data={newInputData} value={getValue} loading={isloading} />\r\n      <div>\r\n        {list.map(\r\n          (\r\n            listitems: { done?: boolean; name?: string; id: string;Infoid:string },\r\n            index: React.Key | null | undefined\r\n          ) => {\r\n            //console.log(\"listitem\",listitems.Infoid);\r\n            //console.log(\"2\",JSON.parse(Object((window.sessionStorage.getItem(\"Info\")))))\r\n            if(listitems.Infoid===JSON.parse(Object((window.sessionStorage.getItem(\"Info\")))).id){\r\n            return (\r\n                <div className=\"Itemscard\">\r\n                  <div className=\"Showmain\" key={index}>\r\n                    <div className=\"Show1\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        onClick={() => cutit(listitems)}\r\n                      ></input>\r\n                    </div>\r\n                    <div className=\"Show2\">\r\n                      <h3\r\n                        style={{\r\n                          textDecoration: listitems.done\r\n                            ? \"line-through\"\r\n                            : \"none\",\r\n                        }}\r\n                      >{listitems.name}\r\n                      </h3>\r\n                    </div>\r\n                    <div className=\"Show3\">\r\n                      <span\r\n                        title=\"Delete Item\"\r\n                        onClick={() => deleteEle(listitems)}\r\n                      >\r\n                        <RiDeleteBin6Line />\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"Show4\">\r\n                      <span\r\n                        title=\"Edit Item\"\r\n                        onClick={() => editEle(listitems.id)}\r\n                      >\r\n                        <RiEdit2Fill />\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              \r\n            )}\r\n            else{\r\n              return null;\r\n            }\r\n          }\r\n        )}\r\n      </div>\r\n      {edititem ? (\r\n        <Button data={updateData} />\r\n      ) : (\r\n        <button className=\"btn\" onClick={updateData}>\r\n          Edit\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}