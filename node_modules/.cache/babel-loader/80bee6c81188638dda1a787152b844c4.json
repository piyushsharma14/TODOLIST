{"ast":null,"code":"var _jsxFileName = \"E:\\\\ReactJs\\\\my-app\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./app.css\";\nimport Input from \"./Input\";\nimport Button from \"./button\";\nimport { RiDeleteBin6Line, RiEdit2Fill } from \"react-icons/ri\";\nimport useLocalStorage from \"./getlocal\";\nimport firebase from \"./firebase_config\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [newInputData, setNewInputData] = useState(\"\");\n  const [edititem, updateedititem] = useState(true);\n  const [editinputid, seteditinputid] = useState(\"\"); //const value =useContext(Userid);\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const [list, isloading] = useLocalStorage(); //custom hooks\n\n  function getValue(event) {\n    setNewInputData(event.target.value);\n  }\n\n  const updateData = () => {\n    if (!newInputData) {\n      alert(\"Please Fill The Data\");\n    } else if (newInputData && !edititem) {\n      const todoref = firebase.database().ref(\"TODO\");\n      todoref.child(editinputid).update({\n        name: newInputData\n      });\n      updateedititem(true);\n      setNewInputData(\"\");\n      seteditinputid(\"\");\n    } else {\n      const todoref = firebase.database().ref(\"TODO\");\n      const Info = window.localStorage.getItem(\"Info\");\n      console.log(JSON.parse(Object(Info)).id);\n      const todo = {\n        Infoid: JSON.parse(Object(Info)).id,\n        name: newInputData,\n        done: false\n      };\n      todoref.push(todo);\n      setNewInputData(\"\");\n    }\n  };\n\n  const logoutFun = () => {\n    history.push(\"/\");\n    window.localStorage.removeItem(\"Info\");\n  };\n\n  const profileFun = () => {\n    dispatch(fetch(JSON.parse(Object(window.localStorage.getItem(\"Info\")))));\n    history.push(\"/details\");\n  };\n\n  const deleteEle = index => {\n    const todoref = firebase.database().ref(\"TODO\").child(index.id);\n    todoref.remove();\n  };\n\n  const editEle = id => {\n    let edit = list.find(ele => {\n      return ele.id === id;\n    }); //console.log(\"edit \",edit);\n\n    updateedititem(false);\n    setNewInputData(edit.name);\n    seteditinputid(id);\n  };\n\n  const cutit = linelist => {\n    const todoref = firebase.database().ref(\"TODO\").child(linelist.id);\n    todoref.update({\n      done: !linelist.done\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profilediv\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"profilebutton\",\n        onClick: profileFun,\n        children: \"User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Logoutdiv\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Logoutbutton\",\n        onClick: logoutFun,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Divbody\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        data: newInputData,\n        value: getValue,\n        loading: isloading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: list.map((listitems, index) => {\n          //console.log(\"listitem\",listitems.Infoid);\n          //console.log(\"2\",JSON.parse(Object((window.localStorage.getItem(\"Info\")))))\n          //if(listitems.Infoid===JSON.parse(Object((window.localStorage.getItem(\"Info\")))).id){\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Itemscard\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Showmain\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Show1\",\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  onClick: () => cutit(listitems)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Show2\",\n                children: /*#__PURE__*/_jsxDEV(\"h3\", {\n                  style: {\n                    textDecoration: listitems.done ? \"line-through\" : \"none\"\n                  },\n                  children: listitems.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Show3\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  title: \"Delete Item\",\n                  onClick: () => deleteEle(listitems),\n                  children: /*#__PURE__*/_jsxDEV(RiDeleteBin6Line, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"Show4\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  title: \"Edit Item\",\n                  onClick: () => editEle(listitems.id),\n                  children: [console.log(listitems.id), /*#__PURE__*/_jsxDEV(RiEdit2Fill, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 134,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), edititem ? /*#__PURE__*/_jsxDEV(Button, {\n        data: updateData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn\",\n        onClick: updateData,\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"5CAkLExgYNfE9cKYCgn5Tgn1wTM=\", false, function () {\n  return [useHistory, useDispatch, useLocalStorage];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/ReactJs/my-app/src/App.tsx"],"names":["React","useState","Input","Button","RiDeleteBin6Line","RiEdit2Fill","useLocalStorage","firebase","useHistory","useDispatch","App","newInputData","setNewInputData","edititem","updateedititem","editinputid","seteditinputid","history","dispatch","list","isloading","getValue","event","target","value","updateData","alert","todoref","database","ref","child","update","name","Info","window","localStorage","getItem","console","log","JSON","parse","Object","id","todo","Infoid","done","push","logoutFun","removeItem","profileFun","fetch","deleteEle","index","remove","editEle","edit","find","ele","cutit","linelist","map","listitems","textDecoration"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./app.css\";\r\nimport Input from \"./Input\";\r\nimport Button from \"./button\";\r\nimport { RiDeleteBin6Line, RiEdit2Fill } from \"react-icons/ri\";\r\nimport useLocalStorage from \"./getlocal\";\r\nimport firebase from \"./firebase_config\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst App = () => {\r\n  const [newInputData, setNewInputData] = useState<string>(\"\");\r\n  const [edititem, updateedititem] = useState<boolean>(true);\r\n  const [editinputid, seteditinputid] = useState<string>(\"\");\r\n  //const value =useContext(Userid);\r\n  const history=useHistory();\r\n  const dispatch=useDispatch();\r\n\r\n  const [list, isloading] = useLocalStorage(); //custom hooks\r\n\r\n  function getValue(event: {\r\n    target: { value: React.SetStateAction<string> };\r\n  }) {\r\n    setNewInputData(event.target.value);\r\n  }\r\n\r\n  const updateData = () => {\r\n    if (!newInputData) {\r\n      alert(\"Please Fill The Data\");\r\n    } else if (newInputData && !edititem) {\r\n      const todoref = firebase.database().ref(\"TODO\");\r\n      todoref.child(editinputid).update({\r\n        name: newInputData,\r\n      });\r\n      updateedititem(true);\r\n      setNewInputData(\"\");\r\n      seteditinputid(\"\");\r\n    } else {\r\n      const todoref = firebase.database().ref(\"TODO\");\r\n      const Info=window.localStorage.getItem(\"Info\");\r\n      console.log(JSON.parse(Object((Info))).id);\r\n      const todo = {Infoid:JSON.parse(Object((Info))).id,name: newInputData, done: false };\r\n      todoref.push(todo);\r\n      setNewInputData(\"\");\r\n    }\r\n  };\r\n  const logoutFun=()=>{\r\n    history.push(\"/\")\r\n    window.localStorage.removeItem(\"Info\");\r\n  }\r\n  const profileFun=()=>{\r\n    \r\n        dispatch(fetch(JSON.parse(Object(window.localStorage.getItem(\"Info\")))))\r\n        history.push(\"/details\")\r\n  }\r\n  const deleteEle = (index: { id: string }) => {\r\n    const todoref = firebase.database().ref(\"TODO\").child(index.id);\r\n    todoref.remove();\r\n  };\r\n\r\n  const editEle = (id: string) => {\r\n    let edit = list.find((ele: { id: string }) => {\r\n      return ele.id === id;\r\n    });\r\n    //console.log(\"edit \",edit);\r\n    updateedititem(false);\r\n    setNewInputData(edit.name);\r\n    seteditinputid(id);\r\n  };\r\n  const cutit = (linelist: any) => {\r\n    const todoref = firebase.database().ref(\"TODO\").child(linelist.id);\r\n    todoref.update({\r\n      done: !linelist.done,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n    \r\n    <div className=\"profilediv\">\r\n        <button className=\"profilebutton\" onClick={profileFun}>\r\n            User\r\n        </button>\r\n    </div>\r\n    <div className=\"Logoutdiv\">\r\n        <button className=\"Logoutbutton\" onClick={logoutFun}>\r\n            Logout\r\n        </button>\r\n    </div>\r\n    <div className=\"Divbody\">\r\n      \r\n      <Input data={newInputData} value={getValue} loading={isloading} />\r\n      <div>\r\n        {list.map(\r\n          (\r\n            listitems: { done?: boolean; name?: string; id: string;Infoid:string },\r\n            index: React.Key | null | undefined\r\n          ) => {\r\n            //console.log(\"listitem\",listitems.Infoid);\r\n            //console.log(\"2\",JSON.parse(Object((window.localStorage.getItem(\"Info\")))))\r\n            //if(listitems.Infoid===JSON.parse(Object((window.localStorage.getItem(\"Info\")))).id){\r\n            return (\r\n                <div className=\"Itemscard\">\r\n                  <div className=\"Showmain\" key={index}>\r\n                    <div className=\"Show1\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        onClick={() => cutit(listitems)}\r\n                      ></input>\r\n                    </div>\r\n                    <div className=\"Show2\">\r\n                      <h3\r\n                        style={{\r\n                          textDecoration: listitems.done\r\n                            ? \"line-through\"\r\n                            : \"none\",\r\n                        }}\r\n                      >{listitems.name}\r\n                      </h3>\r\n                    </div>\r\n                    <div className=\"Show3\">\r\n                      <span\r\n                        title=\"Delete Item\"\r\n                        onClick={() => deleteEle(listitems)}\r\n                      >\r\n                        <RiDeleteBin6Line />\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"Show4\">\r\n                      <span\r\n                        title=\"Edit Item\"\r\n                        onClick={() => editEle(listitems.id)}\r\n                      >\r\n                        {console.log(listitems.id)}\r\n                        <RiEdit2Fill />\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              \r\n            )\r\n          }\r\n        )}\r\n      </div>\r\n      {edititem ? (\r\n        <Button data={updateData} />\r\n      ) : (\r\n        <button className=\"btn\" onClick={updateData}>\r\n          Edit\r\n        </button>\r\n      )}\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}